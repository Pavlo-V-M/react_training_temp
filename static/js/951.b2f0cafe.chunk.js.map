{"version":3,"file":"static/js/951.b2f0cafe.chunk.js","mappings":"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","sources":["pages/ReactHooksPage/ReactHooksPage.jsx","pages/ReactHooksPage/UseStateHook/UseStateHook.jsx","pages/ReactHooksPage/UseReducerHook/UseReducerHook.jsx","routes/HooksRoutes.js","shared/components/Breadcrumb/Breadcrumb.jsx","shared/components/DefMarkup/DefMarkup.jsx"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\r\n\r\nconst ReactHooksPage = () => {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <>\r\n      <h2>React State Manag Hooks List</h2>\r\n      <ul style={{ cursor: \"pointer\" }}>\r\n        <li onClick={() => navigate(\"/hooks/use-state-hook\")}>\r\n          Use State Hook\r\n        </li>\r\n        <li onClick={() => navigate(\"/hooks/use-reducer-hook\")}>\r\n          Use Reducer Hook\r\n        </li>\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReactHooksPage;","import DefMarkup from \"../../../shared/components/DefMarkup/DefMarkup\"\r\n\r\nconst UseStateHook = () => {\r\n  \r\n  return (\r\n    <div>\r\n      <DefMarkup\r\n        text=\"We currently work at this Use State Hook Page\"\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UseStateHook;","import { useReducer } from 'react';\r\nimport DefMarkup from \"../../../shared/components/DefMarkup/DefMarkup\"\r\n\r\nconst UseReducerHook = () => {\r\n\r\n  function reducer(state, action) {\r\n  if (action.type === 'incremented_age') {\r\n    return {\r\n      age: state.age + 1\r\n    };\r\n  }\r\n  else if (action.type === 'dicremented_age') {\r\n    return {\r\n      age: state.age - 1\r\n    };\r\n  }\r\n  throw Error('Unknown action.');\r\n  }\r\n\r\n  const [state, dispatch] = useReducer(reducer, { age: 1 });\r\n  \r\n  return (\r\n    <div>\r\n      <DefMarkup\r\n        text=\"hook {useReducer}\"\r\n      />\r\n      <ul>\r\n        <li>\r\n          <p>You don't need to use Redux additionally.</p>\r\n        </li>\r\n        <li>\r\n          <p>Just import hook useReducer from 'react' ...</p>\r\n        </li>\r\n        <li>\r\n          <p>It lets you move the state update logic from event handlers into a single function outside of your component. So, if necessary, for convenience, you can move the logic of actions to a separate file.</p>\r\n        </li>\r\n        <li>\r\n          <p>Define the main actions. Organize them using switch - case. Pass the case type to dispatch.</p>\r\n        </li>\r\n        <li>\r\n          <p>For a more detailed guide with examples, see the link: https://react.dev/reference/react/useReducer</p>\r\n        </li>\r\n      </ul>\r\n      \r\n      <div style={{ display: \"flex\", alignItems: \"center\", gap: \"30px\" }}>\r\n        <button\r\n        onClick={() => {dispatch({ type: 'dicremented_age' })}}\r\n        style={{ width: \"79px\", height: \"40px\" }}\r\n        >Dicrement age\r\n        </button>\r\n\r\n        <p>Hello! You are = {state.age}</p>\r\n\r\n        <button\r\n          onClick={() => {dispatch({ type: 'incremented_age' })}}\r\n          style={{ width: \"79px\", height: \"40px\" }}\r\n        >Increment age\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UseReducerHook;","import { Routes, Route } from \"react-router-dom\";\r\nimport Breadcrumb from \"../shared/components/Breadcrumb/Breadcrumb\";\r\nimport ReactHooksPage from \"../pages/ReactHooksPage/ReactHooksPage\";\r\nimport UseStateHook from \"../pages/ReactHooksPage/UseStateHook/UseStateHook\";\r\nimport UseReducerHook from \"../pages/ReactHooksPage/UseReducerHook/UseReducerHook\";\r\n\r\nconst HooksRoutes = () => {\r\n  return (\r\n    <div>\r\n      <Breadcrumb />\r\n      <Routes>\r\n        <Route path=\"\" element={<ReactHooksPage />} />\r\n        <Route path=\"use-state-hook\" element={<UseStateHook />} />\r\n        <Route path=\"use-reducer-hook\" element={<UseReducerHook />} />\r\n      </Routes>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HooksRoutes;","import React from \"react\";\r\nimport { useLocation, Link } from \"react-router-dom\";\r\n\r\nconst Breadcrumb = () => {\r\n  const location = useLocation();\r\n  const paths = location.pathname.split(\"/\").filter((path) => path);\r\n\r\n  return (\r\n    <nav style={{ borderBottom: \"2px solid #123b7d\" }}>\r\n      <ul style={{ display: \"flex\", listStyle: \"none\", gap: \"8px\" }}>\r\n        <li><Link to=\"/\">Home</Link></li>\r\n        {paths.map((path, index) => {\r\n          const to = `/${paths.slice(0, index + 1).join(\"/\")}`;\r\n          \r\n          // Ignore \"edit\" when generating links\r\n          // if (path === \"edit\") { return <li key={to}><span> / {path}</span></li>; }\r\n          if (paths[index - 1] === \"edit\") return null;\r\n          \r\n          return (\r\n            <li key={to}>\r\n              <span> / </span>\r\n              {path === \"edit\"\r\n                ? (<span>{path}</span>)\r\n                : (<Link to={to}>{path}</Link>)\r\n              }\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;","const DefMarkup = ({ text }) => { \r\n  return (\r\n    <>\r\n      <h2>{text} ðŸ‘¾ ...</h2>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DefMarkup;"],"names":["ReactHooksPage","navigate","useNavigate","_jsxs","_Fragment","children","_jsx","style","cursor","onClick","UseStateHook","DefMarkup","text","UseReducerHook","state","dispatch","useReducer","action","type","age","Error","display","alignItems","gap","width","height","HooksRoutes","Breadcrumb","Routes","Route","path","element","paths","useLocation","pathname","split","filter","borderBottom","listStyle","Link","to","map","index","concat","slice","join","_ref"],"sourceRoot":""}